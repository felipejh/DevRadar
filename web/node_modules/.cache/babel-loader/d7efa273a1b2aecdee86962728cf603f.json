{"ast":null,"code":"import _slicedToArray from \"/Users/felipehoffmann/desenv/js/semanaomnistack10/js-DevRadar/web/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/felipehoffmann/desenv/js/semanaomnistack10/js-DevRadar/web/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport api from './services/api';\nimport './global.css';\nimport './App.css';\nimport './Sidebar.css';\nimport './Main.css';\nimport DevForm from './components/DevForm';\nimport DevItem from './components/DevItems'; // Componente: Bloco isolado o qual não interfere no restante da aplicação. É uma função que retorna um conteúdo HTML, CSS ou JS\n// Propriedade: São os atributos de um componente. Ex.: title, id, className. Informações que um componente PAI passa para o componente FILHO\n// Estado: Informações mantidas pelo componente (Lembrar do conceito imutabilidade). {useState}\n\nfunction App() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        devs = _useState2[0],\n        setDevs = _useState2[1]; // useEffect: Executa apenas uma única vez\n\n\n  useEffect(() => {\n    async function loadDevs() {\n      const response = await api.get('/devs');\n      console.log(\"DEV\");\n      setDevs(response.data);\n    }\n\n    console.log(\"DEV\");\n    loadDevs();\n  }, []);\n\n  async function handleAddDev(data) {\n    const response = await api.post('/devs', data);\n\n    if (response.status === 203) {\n      alert(response.data);\n      return;\n    }\n\n    setDevs([...devs, response.data]);\n  }\n\n  return React.createElement(\"div\", {\n    id: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Cadastrar\"), React.createElement(DevForm, {\n    onSubmit: handleAddDev,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, devs.map(dev => React.createElement(DevItem, {\n    key: dev._id,\n    dev: dev,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/felipehoffmann/desenv/js/semanaomnistack10/js-DevRadar/web/src/App.js"],"names":["React","useEffect","useState","api","DevForm","DevItem","App","devs","setDevs","loadDevs","response","get","console","log","data","handleAddDev","post","status","alert","map","dev","_id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AAEA,OAAO,cAAP;AACA,OAAO,WAAP;AACA,OAAO,eAAP;AACA,OAAO,YAAP;AAEA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,uBAApB,C,CAEA;AACA;AACA;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACWJ,QAAQ,CAAC,EAAD,CADnB;AAAA;AAAA,QACNK,IADM;AAAA,QACAC,OADA,kBAGb;;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeQ,QAAf,GAA0B;AACxB,YAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAJ,CAAQ,OAAR,CAAvB;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACML,MAAAA,OAAO,CAACE,QAAQ,CAACI,IAAV,CAAP;AACD;;AACDF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAJ,IAAAA,QAAQ;AACT,GARQ,EAQN,EARM,CAAT;;AAUA,iBAAeM,YAAf,CAA4BD,IAA5B,EAAkC;AAChC,UAAMJ,QAAQ,GAAG,MAAMP,GAAG,CAACa,IAAJ,CAAS,OAAT,EAAkBF,IAAlB,CAAvB;;AAEA,QAAIJ,QAAQ,CAACO,MAAT,KAAoB,GAAxB,EAA4B;AAC1BC,MAAAA,KAAK,CAACR,QAAQ,CAACI,IAAV,CAAL;AACA;AACD;;AAEDN,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUG,QAAQ,CAACI,IAAnB,CAAD,CAAP;AACD;;AAED,SACE;AAAK,IAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAEC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,IAAI,CAACY,GAAL,CAASC,GAAG,IACX,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,GAAG,CAACC,GAAlB;AAAuB,IAAA,GAAG,EAAED,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,CANF,CADF;AAkBD;;AAED,eAAed,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from './services/api';\n\nimport './global.css';\nimport './App.css';\nimport './Sidebar.css';\nimport './Main.css';\n\nimport DevForm from './components/DevForm';\nimport DevItem from './components/DevItems';\n\n// Componente: Bloco isolado o qual não interfere no restante da aplicação. É uma função que retorna um conteúdo HTML, CSS ou JS\n// Propriedade: São os atributos de um componente. Ex.: title, id, className. Informações que um componente PAI passa para o componente FILHO\n// Estado: Informações mantidas pelo componente (Lembrar do conceito imutabilidade). {useState}\n\nfunction App() {\n  const [devs, setDevs] = useState([]);\n\n  // useEffect: Executa apenas uma única vez\n  useEffect(() => {\n    async function loadDevs() {\n      const response = await api.get('/devs');\nconsole.log(\"DEV\");\n      setDevs(response.data);\n    }\n    console.log(\"DEV\");\n    loadDevs();\n  }, []);\n\n  async function handleAddDev(data) {\n    const response = await api.post('/devs', data);\n    \n    if (response.status === 203){\n      alert(response.data)\n      return\n    }\n\n    setDevs([...devs, response.data]);\n  }\n\n  return (\n    <div id=\"app\">\n      <aside>\n        <strong>Cadastrar</strong>\n        <DevForm onSubmit={handleAddDev}/>\n      </aside>\n\n      <main>\n        <ul>\n          {devs.map(dev => (\n            <DevItem key={dev._id} dev={dev} />\n          ))}\n\n        </ul>\n      </main>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}